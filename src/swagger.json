{
  "openapi": "3.0.0",
  "info": {
      "title": "Rentalx Documentation",
      "description": "This is an API Rentx",
      "version": "1.0.0",
      "contact": {
        "email": "diogosantosferreira.01@gmail.com"
      }
  },

  "paths": {
    "/register": {
        "post": {
            "tags": ["Users"],
            "summary": "Create new User",
            "description": "Route for create new user",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "example": {
                                "name": "Diogo", 
                                "email": "dio7@gmail.com", 
                                "password": "1234", 
                                "driver_license": "xxx-license"
                            }
                        }
                    }
                }
            },
            "responses": {
                "201": { "description": "User created successfully" },
                "400": { "description": "incorrect request" },
                "401": { "description": "User already exists" }
            }
        }    
    },
    
    "/login": {
        "post": {
            "tags": ["Users"],
            "summary": "Enter the system",
            "description": "Rota de fazer Login",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "example": { 
                                "email": "dio7@gmail.com",
                                "password": "1234"
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": { "description": "Login successfully" },
                "401": { "description": "Incorrect email or password" },
                "400": { "description": "incorrect request"}
            }
        }  
    },
    "/categories/import": {
        "post": {
            "tags": ["Categories"],
            "summary": "Upload a new category",
            "description": "Route for created a new category with file",
            "security":[{"bearerAuth": []}],
            "requestBody": {
                "content": {
                    "multipart/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "file": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "201": { "description":  "Created"}
            }
        }
    },
    "/categories": {
      "post": {
          "tags": ["Categories"],
          "summary": "Create new Category",
          "description": "Route for created category",
          "security":[{"bearerAuth": []}],
          "requestBody": {
              "content": {
                  "application/json": {
                      "schema": {
                          "type": "object",
                          "example": {
                              "name": "ferrari",
                              "description": "carro muito foda"
                          }
                      }
                  }
              }
          },
          "responses": {
              "201": { "description": "Category created successfully" },
              "400": { "description": "incorrect request" },
              "401": { "description": "Category already exists" }
          }
      },
      "get": {
        "tags": ["Categories"],
        "summary": "All categories",
        "description": "Route for list categories",
        "responses": {
            "200": { "description": "All categories" }
        }
      }        
    },
    "/specifications": {
      "post": {
          "tags": ["Specifications"],
          "summary": "Create new specification",
          "description": "Route for created specification",
          "requestBody": {
              "content": {
                  "application/json": {
                      "schema": {
                          "type": "object",
                          "example": {
                              "name": "ferrari do diogo",
                              "description": "essa Ã© minha"
                          }
                      }
                  }
              }
          },
          "responses": {
              "201": { "description": "Specifications created successfully" },
              "400": { "description": "incorrect request" },
              "401": { "description": "Specifications already exists" }
          }
      },
      "get": {
        "tags": ["Specifications"],
        "summary": "All specifications",
        "description": "Route for list specifications",
        "responses": {
            "200": { "description": "All specifications" }
        }
      }        
    }
  },
  "components":{
    "securitySchemes":{
        "bearerAuth":{
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT"
            }
        }
    }
  }
